# For local backend development, copy the root .env.example to .env at the repository root
# or create this file as backend/.env with the following variables:

# MongoDB
MONGO_URI=mongodb+srv://<username>:<password>@cluster0.mongodb.net/?retryWrites=true&w=majority
MONGO_DB=revu

# Authentication
JWT_SECRET=replace_with_a_long_random_secret
JWT_EXPIRES_MIN=60

# Redis (use localhost for local dev, redis://redis:6379/0 for Docker)
REDIS_URL=redis://localhost:6379/0

# Summarization backend
SUMMARY_BACKEND=gemini
GEMINI_API_KEY=<your_gemini_api_key>

# Scraper settings
SCRAPER_MAX_REVIEWS=300

# Test URL (optional, for manual testing)
TEST_AMAZON_URL=<url-to-an-amazon-product>


# Apify settings (required)
APIFY_API_TOKEN="your_token_here"
#+ Required actor selection (default in code and docker-compose is axesso_data/amazon-reviews-scraper)
# If you want to override, set this variable accordingly.
APIFY_REVIEWS_ACTOR="axesso_data/amazon-reviews-scraper"
# Optional: inject extra JSON into the reviews actor run input
# For example: {"includeProductInfo": true}
# APIFY_REVIEWS_EXTRA_INPUT="{}"